{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["bell","Audio","UnstyledList","styled","ul","_templateObject","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","extendObservable","assertThisInitialized","cycleStats","timeLeft","dayOrNight","soundEnabled","bounties","bellPlayed","solarisBounties","themeButtonClass","themeToggle","themes","dark","color","bgcolor","light","timeInterval","updateCetusCycle","setInterval","length","_this2","react_default","a","createElement","className","type","onClick","choice","document","documentElement","style","setProperty","s","secs","mins","msToTime","CustomInput","id","name","label","defaultChecked","onChange","e","currentTarget","checked","Container","Row","Array","isArray","jobs","map","bounty","index","Col","key","rewardPool","reward","_this3","fetch","then","res","json","cetusCycle","isDay","console","log","Date","updateTimeLeft","clearInterval","syndicateMissions","find","missions","syndicate","error","warn","catch","setTimeout","expiry","getTime","now","play","Component","observer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.73ff9600.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css'\nimport { extendObservable, toJS } from 'mobx'\nimport { observer } from 'mobx-react'\nimport { CustomInput, Container, Row, Col } from 'reactstrap'\nimport styled from 'styled-components'\n\nconst bell = new Audio('./MM_ClockTower_Bell.wav')\n\nconst UnstyledList = styled.ul`\n  list-style: none;\n  padding: 0;\n  font-size: 0.9rem;\n`\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    extendObservable(this, {\n      cycleStats: {},\n      timeLeft: 0,\n      dayOrNight: '',\n      soundEnabled: true,\n      bounties: [],\n      bellPlayed: false,\n      solarisBounties: [],\n      themeButtonClass: \"btn btn-light\",\n      themeToggle: true,\n      themes: {  \n        dark:{  \n          color: \"#cccccc\",\n          bgcolor: \"#1c1e27\",\n          themeButtonClass: \"btn btn-light\"\n        },\n        light:{  \n          color: \"#1c1e27\",\n          bgcolor: \"#cccccc\",\n          themeButtonClass: \"btn btn-dark\"\n        }\n      }\n    })\n    this.timeInterval = null\n    this.updateCetusCycle()\n    setInterval(() => {\n      if (this.bounties.length === 0) {\n        this.updateCetusCycle()\n      }\n    }, 60000);\n  }\n\n  render() {\n    return (\n      this.cycleStats && (\n        <div>\n          <div className=\"d-flex justify-content-end m-3\">\n            <button\n              type=\"button\"\n              className={this.themeButtonClass}\n              onClick={() => {\n                let choice = this.themeToggle ? 'light' : 'dark' \n                document.documentElement.style.setProperty('--bg-color', this.themes[choice].bgcolor);\n                document.documentElement.style.setProperty('--color', this.themes[choice].color);\n                this.themeButtonClass = this.themes[choice].themeButtonClass\n                this.themeToggle = !this.themeToggle;\n              }}>\n                Invert colors\n              </button>\n            </div>\n          <div className=\"cycle-stats\">\n            {/* {JSON.stringify(this.cycleStats)} */}\n            <p>Currently it is: {this.dayOrNight}</p>\n            <p>\n              Time left:{' '}\n              {this.timeLeft !== 0\n                ? msToTime(this.timeLeft)\n                : 'awaiting update...'}\n            </p>\n            <CustomInput\n              type=\"switch\"\n              id=\"soundToggle\"\n              name=\"soundToggle\"\n              label=\"Enable sound on nightfall\"\n              defaultChecked\n              onChange={e => {\n                this.soundEnabled = e.currentTarget.checked\n              }}\n            />\n          </div>\n          <div>\n            <Container className=\"text-center\">\n              <h4 className=\"mt-5 mb-2\">\n                Cetus Bounties\n              </h4>\n              <Row className=\"mt-4\">\n                {this.bounties &&\n                  Array.isArray(this.bounties.jobs) &&\n                  this.bounties.jobs.map((bounty, index) => (\n                    <Col key={index}>\n                      <h5>{bounty.type}</h5>\n                      {Array.isArray(bounty.rewardPool) && <UnstyledList>\n                        {bounty.rewardPool.map((reward, index) => <li key={index}>{reward}</li>)}\n                      </UnstyledList>}\n                    </Col>\n                  ))}\n              </Row>\n            </Container>\n            <Container className=\"text-center\">\n              <h4 className=\"mt-5 mb-2\">\n                Fortuna Bounties\n              </h4>\n              <Row className=\"mt-4\">\n                {this.solarisBounties &&\n                  Array.isArray(this.solarisBounties.jobs) &&\n                  this.solarisBounties.jobs.map((bounty, index) => (\n                    <Col key={index}>\n                      <h5>{bounty.type}</h5>\n                      {Array.isArray(bounty.rewardPool) && <UnstyledList>\n                        {bounty.rewardPool.map((reward, index) => <li key={index}>{reward}</li>)}\n                      </UnstyledList>}\n                    </Col>\n                  ))}\n              </Row>\n            </Container>\n          </div>\n        </div>\n      )\n    )\n  }\n\n  updateCetusCycle() {\n    fetch('https://api.warframestat.us/pc')\n      .then(res => res.json())\n      .then(res => {\n        const cycleStats = res.cetusCycle\n        this.cycleStats = cycleStats\n        this.bellPlayed = false\n        if (this.cycleStats)\n          this.dayOrNight = this.cycleStats.isDay ? 'day' : 'night'\n        console.log(this.cycleStats, new Date())\n        this.updateTimeLeft()\n        if (this.timeInterval) clearInterval(this.timeInterval)\n        if (this.timeLeft < 0) {\n          clearInterval(this.timeInterval)\n          this.timeLeft = 0\n          this.timeInterval = setInterval(() => {\n            this.updateCetusCycle()\n          }, 20000)\n        } else {\n          this.timeInterval = setInterval(() => {\n            this.updateTimeLeft()\n            if (this.timeLeft < 0) {\n              clearInterval(this.timeInterval)\n              this.updateCetusCycle()\n            }\n          }, 250)\n        }\n        try {\n          const bounties = res.syndicateMissions.find(\n            missions => missions.syndicate === 'Ostrons'\n          )\n          this.bounties = bounties\n          console.log(res.syndicateMissions)\n          const solarisBounties = res.syndicateMissions.find(\n            missions => missions.syndicate === 'Solaris United'\n          )\n          this.solarisBounties = solarisBounties\n        } catch (error) {\n          console.warn('Bounties not found')\n        }\n      })\n      .catch(() => {\n        setTimeout(() => {\n          this.updateCetusCycle()\n        }, 30000)\n      })\n  }\n\n  updateTimeLeft() {\n    this.timeLeft = new Date(this.cycleStats.expiry).getTime() - Date.now()\n    if (\n      this.cycleStats &&\n      this.dayOrNight === 'day' &&\n      this.soundEnabled &&\n      this.timeLeft < 5000 &&\n      this.timeLeft > 0 &&\n      !this.bellPlayed\n    ) {\n      bell.play()\n      this.bellPlayed = true\n    }\n  }\n}\n\nfunction msToTime(s) {\n  let ms = s % 1000\n  s = (s - ms) / 1000\n  let secs = s % 60\n  s = (s - secs) / 60\n  let mins = s % 60\n  let hrs = (s - mins) / 60\n  return (\n    hrs +\n    ':' +\n    (mins < 10 ? '0' + mins : mins) +\n    ':' +\n    (secs < 10 ? '0' + secs : secs)\n  )\n}\n\nexport default observer(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}